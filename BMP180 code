#include <Adafruit_BMP085_U.h> // Include the Adafruit BMP085 library for the pressure sensor
#include <Wire.h>              // Include the Wire library for I2C communication
#include <LiquidCrystal_I2C.h> // Include the LiquidCrystal_I2C library for the LCD

// Create object for the sensor
Adafruit_BMP085_Unified bmp; // Instantiate the BMP085 sensor object

// Set up the LCD
LiquidCrystal_I2C lcd(0x27, 16, 2); // Initialize the LCD with I2C address 0x27, 16 columns, and 2 rows

void setup() {
    // Check if the sensor is working properly
    if (!bmp.begin()) {
        lcd.begin(16, 2);       // Initialize the LCD
        lcd.backlight();        // Turn on the LCD backlight
        lcd.print("Sensor Error!"); // Display error message
        while (1);              // Stop the program if unable to connect
    }

    // Set up the LCD
    lcd.begin(16, 2);          // Initialize the LCD
    lcd.backlight();           // Turn on the LCD backlight

    delay(2000);               // Wait for 2 seconds
    lcd.clear();               // Clear the LCD display
}

void loop() {
    sensors_event_t event;     // Create an event object to hold sensor data
    bmp.getEvent(&event);      // Get pressure data from the sensor

    lcd.clear();               // Clear the screen before each update
    if (event.pressure) {      // Check if pressure data is available
        // Display atmospheric pressure
        lcd.setCursor(0, 0);   // Set cursor to the first row
        lcd.print("Pressure:"); // Print "Pressure:" on the LCD
        lcd.setCursor(0, 1);   // Set cursor to the second row
        lcd.print(event.pressure); // Print the pressure value
        lcd.print(" hPa");     // Print the unit (hectopascals)
    } else {
        lcd.setCursor(0, 0);   // Set cursor to the first row
        lcd.print("No Data");   // Print "No Data" message
        lcd.setCursor(0, 1);   // Set cursor to the second row
        lcd.print("Available."); // Print additional message
    }

    delay(2000);               // Delay for 2 seconds before the next loop
}
